<script setup>
import { ref } from "vue";
import { Head, router } from "@inertiajs/vue3";
import NavLayout from "@/Layouts/NavLayout.vue";

defineProps({ errors: Object });

let course_title = ref("");
let course_thumbnail = ref("");
let course_instructor = ref("");
let course_price = ref("");
let course_overview = ref("");

let error = ref({
    course_title: null,
    course_thumbnail: null,
    course_instructor: null,
    course_price: null,
    course_overview: null,
});

const episodes = ref([
    {
        thumbnail: null,
        video: null,
        title: "",
        description: "",
        topics: [],
    },
]);

const addCourse = () => {
    let err = false;

    error.value.course_title = null;
    error.value.course_thumbnail = null;
    error.value.course_instructor = null;
    error.value.course_price = null;
    error.value.course_overview = null;

    if (!course_title.value) {
        error.value.course_title = "Please enter Course Title";
        err = true;
    }
    if (!course_thumbnail.value) {
        error.value.course_thumbnail = "Please select a thumbnail";
        err = true;
    }
    if (!course_instructor.value) {
        error.value.course_instructor = "Please enter Course Instructor";
        err = true;
    }

    if (!course_price.value) {
        error.value.course_price = "Please enter Course Price";
        err = true;
    }

    if (!course_overview.value) {
        error.value.course_overview = "Please enter Course Overview";
        err = true;
    }

    if (err) {
        return;
    }

    let data = new FormData();

    data.append("title", course_title.value);
    data.append("instructor", course_instructor.value);
    data.append("thumbnail", course_thumbnail.value);
    data.append("current_price", course_price.value);
    data.append("course_overview", course_overview.value);
    episodes.value = episodes.value.map((episode, index) => {
        data.append(`episodes[${index}][thumbnail]`, episode.thumbnail);
        data.append(`episodes[${index}][video]`, episode.video);
        data.append(`episodes[${index}][title]`, episode.title);
        data.append(`episodes[${index}][description]`, episode.description);

        episode.topics.forEach((topic, topicIndex) => {
            data.append(`episodes[${index}][topics][${topicIndex}][title]`, topic.title);
            topic.objects.forEach((object, objectIndex) => {
                data.append(`episodes[${index}][topics][${topicIndex}][objects][${objectIndex}][type]`, object.type);
                data.append(`episodes[${index}][topics][${topicIndex}][objects][${objectIndex}][content]`, object.content || '');
                data.append(`episodes[${index}][topics][${topicIndex}][objects][${objectIndex}][file_path]`, object.file_path || '');
                data.append(`episodes[${index}][topics][${topicIndex}][objects][${objectIndex}][test_id]`, object.test_id || '');
            });
        });

        return episode;
    });

    router.post("/addcourse", data);
};

const handleThumbnailChange = (index, e) => {
    const file = e.target.files[0];
    episodes.value[index].thumbnail = file;
};

const handleVideoChange = (index, e) => {
    const file = e.target.files[0];
    episodes.value[index].video = file;
};

const handleObjectFileChange = (episodeIndex, topicIndex, objectIndex, e) => {
    const file = e.target.files[0];
    episodes.value[episodeIndex].topics[topicIndex].objects[objectIndex].file_path = file;
};

const getImage = (e) => (course_thumbnail.value = e.target.files[0]);

const addEpisode = () => {
    episodes.value.push({
        thumbnail: null,
        video: null,
        title: "",
        description: "",
        topics: [],
    });
};

const removeEpisode = (index) => {
    episodes.value.splice(index, 1);
};

const addTopic = (episodeIndex) => {
    episodes.value[episodeIndex].topics.push({ title: "", objects: [] });
};

const removeTopic = (episodeIndex, topicIndex) => {
    episodes.value[episodeIndex].topics.splice(topicIndex, 1);
};

const addObject = (episodeIndex, topicIndex, type) => {
    const newObject = { type, content: '', file_path: '', test_id: '' };
    episodes.value[episodeIndex].topics[topicIndex].objects.push(newObject);
};

const removeObject = (episodeIndex, topicIndex, objectIndex) => {
    episodes.value[episodeIndex].topics[topicIndex].objects.splice(objectIndex, 1);
};
</script>

<template>
    <Head title="Add Course" />

    <NavLayout>
        <main class="container mx-auto py-8">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div class="md:col-span-3 bg-gray-800 rounded-lg p-6 flex">
                    <h2 class="text-white font-extrabold">Add New Course</h2>
                </div>
                <div class="md:col-span-3 bg-gray-800 rounded-lg p-6 flex">
                    <form class="w-full" @submit.prevent="addCourse">
                        <div class="flex flex-wrap -mx-3 mb-6">
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <label
                                    class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                    for="course-title"
                                >
                                    Название
                                    <span class="text-red-600">*</span>
                                </label>
                                <input
                                    class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                    id="course-title"
                                    type="text"
                                    placeholder="Course Title"
                                    v-model="course_title"
                                />
                                <p
                                    v-if="error.course_title"
                                    class="text-red-500 text-xs italic"
                                >
                                    {{ error.course_title }}
                                </p>
                            </div>
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <label
                                    class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                    for="course-instructor"
                                >
                                    Преподаватель
                                    <span class="text-red-600">*</span>
                                </label>
                                <input
                                    class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                    id="course-instructor"
                                    type="text"
                                    placeholder="Course Instructor"
                                    v-model="course_instructor"
                                />
                                <p
                                    v-if="error.course_instructor"
                                    class="text-red-500 text-xs italic"
                                >
                                    {{ error.course_instructor }}
                                </p>
                            </div>
                        </div>
                        <div class="flex flex-wrap -mx-3 mb-6">
                            <div class="w-full px-3">
                                <label
                                    class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                    for="course-overview"
                                >
                                    Описание курса
                                    <span class="text-red-600">*</span>
                                </label>
                                <textarea
                                    v-model="course_overview"
                                    id="course-overview"
                                    class="form-control block w-full px-3 py-3 text-gray-700 bg-gray-200 border border-gray-300 rounded leading-tight focus:outline-none focus:bg-white"
                                    rows="5"
                                    placeholder="Course Overview"
                                ></textarea>
                                <p
                                    v-if="error.course_overview"
                                    class="text-red-500 text-xs italic"
                                >
                                    {{ error.course_overview }}
                                </p>
                            </div>
                        </div>
                        <div class="flex flex-wrap -mx-3 mb-6">
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <label
                                    class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                    for="course-price"
                                >
                                    Цена курса
                                    <span class="text-red-600">*</span>
                                </label>
                                <input
                                    class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                    id="course-price"
                                    type="number"
                                    min="0.1"
                                    step="0.1"
                                    placeholder="Course Price"
                                    v-model="course_price"
                                />
                                <p
                                    v-if="error.course_price"
                                    class="text-red-500 text-xs italic"
                                >
                                    {{ error.course_price }}
                                </p>
                            </div>
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <label
                                    class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                    for="course-thumbnail"
                                >
                                    Рисунок курса
                                    <span class="text-red-600">*</span>
                                </label>
                                <input
                                    @change="getImage"
                                    class="form-control block w-full px-3 py-1.5 text-gray-700 bg-gray-200 border border-gray-300 rounded leading-tight focus:outline-none focus:bg-white"
                                    type="file"
                                    id="course-thumbnail"
                                />
                                <p
                                    v-if="error.course_thumbnail"
                                    class="text-red-500 text-xs italic"
                                >
                                    {{ error.course_thumbnail }}
                                </p>
                            </div>
                        </div>
                        <hr class="h-px my-8 bg-gray-200 border-0 dark:bg-gray-700" />
                        <div class="flex flex-wrap -mx-3 mb-6">
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <button
                                    @click="addEpisode"
                                    class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-gray-600 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-300"
                                    type="button"
                                >
                                    Добавить новый эпизод
                                </button>
                            </div>
                        </div>

                        <div v-for="(episode, index) in episodes" :key="index">
                            <div class="flex flex-wrap -mx-3 mb-6">
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <label
                                        class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                        for="episode-title"
                                    >
                                        Эпизод {{ index + 1 }}: Название
                                    </label>
                                    <input
                                        class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                        id="episode-title"
                                        type="text"
                                        placeholder="Episode Title"
                                        v-model="episode.title"
                                    />
                                </div>
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <label
                                        class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                        for="episode-description"
                                    >
                                        Эпизод {{ index + 1 }}: Описание
                                    </label>
                                    <input
                                        class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                        id="episode-description"
                                        type="text"
                                        placeholder="Episode Description"
                                        v-model="episode.description"
                                    />
                                </div>
                            </div>
                            <div class="flex flex-wrap -mx-3 mb-6">
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <label
                                        class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                        for="episode-thumbnail"
                                    >
                                        Эпизод {{ index + 1 }}: Рисунок
                                    </label>
                                    <input
                                        @change="e => handleThumbnailChange(index, e)"
                                        class="form-control block w-full px-3 py-1.5 text-gray-700 bg-gray-200 border border-gray-300 rounded leading-tight focus:outline-none focus:bg-white"
                                        type="file"
                                        id="episode-thumbnail"
                                    />
                                </div>
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <label
                                        class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                        for="episode-video"
                                    >
                                        Эпизод {{ index + 1 }}: Видео
                                    </label>
                                    <input
                                        @change="e => handleVideoChange(index, e)"
                                        class="form-control block w-full px-3 py-1.5 text-gray-700 bg-gray-200 border border-gray-300 rounded leading-tight focus:outline-none focus:bg-white"
                                        type="file"
                                        id="episode-video"
                                    />
                                </div>
                            </div>
                            <div class="flex flex-wrap -mx-3 mb-6">
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <button
                                        @click="() => addTopic(index)"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-gray-600 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-300"
                                        type="button"
                                    >
                                        Добавить тему
                                    </button>
                                </div>
                            </div>
                            <div v-for="(topic, topicIndex) in episode.topics" :key="topicIndex" class="flex flex-wrap -mx-3 mb-6 items-center">
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <label
                                        class="block uppercase tracking-wide text-white text-xs font-bold mb-2"
                                        for="topic-title"
                                    >
                                        Тема {{ topicIndex + 1 }}: Название
                                    </label>
                                    <input
                                        class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                                        id="topic-title"
                                        type="text"
                                        placeholder="Topic Title"
                                        v-model="topic.title"
                                    />
                                </div>
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <button
                                        @click="() => removeTopic(index, topicIndex)"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300"
                                        type="button"
                                    >
                                        Удалить тему
                                    </button>
                                </div>
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <button
                                        @click="() => addObject(index, topicIndex, 'video')"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300"
                                        type="button"
                                    >
                                        Добавить Видео
                                    </button>
                                    <button
                                        @click="() => addObject(index, topicIndex, 'text')"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-green-600 rounded-lg hover:bg-green-800 focus:outline-none focus:ring-4 focus:ring-green-300"
                                        type="button"
                                    >
                                        Добавить Текст
                                    </button>
                                    <button
                                        @click="() => addObject(index, topicIndex, 'file')"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-yellow-600 rounded-lg hover:bg-yellow-800 focus:outline-none focus:ring-4 focus:ring-yellow-300"
                                        type="button"
                                    >
                                        Добавить Файл
                                    </button>
                                    <button
                                        @click="() => addObject(index, topicIndex, 'test')"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300"
                                        type="button"
                                    >
                                        Добавить Тест
                                    </button>
                                </div>
                                <div v-for="(object, objectIndex) in topic.objects" :key="objectIndex" class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <div v-if="object.type === 'video'">
                                        <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2">Видео</label>
                                        <input type="file" @change="e => handleObjectFileChange(index, topicIndex, objectIndex, e)" />
                                    </div>
                                    <div v-else-if="object.type === 'text'">
                                        <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2">Текст</label>
                                        <textarea v-model="object.content" class="form-control block w-full px-3 py-1.5 text-gray-700 bg-gray-200 border border-gray-300 rounded leading-tight focus:outline-none focus:bg-white"></textarea>
                                    </div>
                                    <div v-else-if="object.type === 'file'">
                                        <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2">Файл</label>
                                        <input type="file" @change="e => handleObjectFileChange(index, topicIndex, objectIndex, e)" />
                                    </div>
                                    <div v-else-if="object.type === 'test'">
                                        <label class="block uppercase tracking-wide text-white text-xs font-bold mb-2">Тест</label>
                                        <!-- Здесь предполагается, что у вас есть способ выбора теста, который связан с объектом -->
                                    </div>
                                    <button
                                        @click="() => removeObject(index, topicIndex, objectIndex)"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300"
                                        type="button"
                                    >
                                        Удалить объект
                                    </button>
                                </div>
                            </div>
                            <div class="flex flex-wrap -mx-3 mb-6">
                                <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                    <button
                                        @click="() => removeEpisode(index)"
                                        class="inline-flex items-center px-3 py-2 mt-2 text-sm font-medium text-white bg-gray-600 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-300"
                                        type="button"
                                    >
                                        Удалить эпизод
                                    </button>
                                </div>
                            </div>
                            <hr class="h-px my-8 bg-gray-200 border-0 dark:bg-gray-700" />
                        </div>
                        <div class="flex flex-wrap -mx-3 mb-6">
                            <div class="w-full md:w-1/2 px-3 mb-6 md:mb-0">
                                <button
                                    class="inline-flex items-center px-3 py-2 mt-2 ml-4 text-sm font-medium text-white bg-gray-600 rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-300"
                                    type="submit"
                                >
                                    Добавить курс
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </main>
    </NavLayout>
</template>
